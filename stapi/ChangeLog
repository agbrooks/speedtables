4/28/2016 karl
    * Fix "return" in code bodies for stapi shared memory and postgres-backed speedtables.
	* Version bump to 1.9.1

03/20/2016 peter
    * Update test framework to work without rivet/DIO
      Env vars PG_DB ST_PREFIX STAPI_PREFIX

03/27/2016 peter
    * Fix for missing SQL code in gen_refresh_ctable_sql

07/21/2012 peter
    * Add detach option for sockets for shared memory speedtables.

07/09/2012 karl
    * Provide a variable ::stapi::cache_table_columns that if set (default 1),
      caches the results of ::stapi::get_columns to get all the field names
      and data types of each field for a specified table.  Should greatly
      reduce contention for pg_class, pg_attribute and pg_type when lots
      of children are using stapi to connect to lots of tables.

06/29/2012 karl
    * When a stapi table has a key comprised of more than one field, 
      generate a coalesce(field,'') so that where one or more of the
      compound key fields are null, you'll still get a reasonable compound 
      key, rather than a null.

06/20/2012 karl
    * Make -fields work properly for sql-based stapi searches.

06/18/2012 karl
    * Add support to stapi postgres tables for speedtable search 
      options -array and -array_get

06/11/2012 karl
    * Factor a gen_refresh_ctable_sql proc out of refresh_ctable.

    * Cache the base fetch sql once read from the stapi definition.

    * Use gmt-based clock comparison when generating time-column-based
      table updates, presuming sql fields are "timestamp without time zone",
      which they really should be.

06/10/2012 karl
    * Standardize "if" statements to be bracketed, normalize some formatting
      and introduce some space around various phrases in the code.

    * Make ::stapi::open_raw_ctable bypass skip all the build checking
      if a matching c_$name-style table-creating command already exists.

06/09/2012 karl
    * Rename create_ctable_definition to create_speedtable_definition and
      gen_ctable_sql_select to gen_speedtable_sql_select.  Since only
      stapi and some new code I'm working with use it, it's not impactful.

    * Make create_speedtable_definition and, thereby, init_ctable, generate
      the new-style "speedtables" opener rather than the old-style
      "CExtension" one, capitalizing the first letter for compliance
      (and it was uppercased anyway by the underlying software).

      Document the new commands in the doc.txt.

06/08/2012 karl
    * Factor a stapi::create_ctable_definition proc out of stapi::init_ctable.

    * Factor a stapi::gen_ctable_sql_select proc out of stapi::init_ctable.

08/25/2011 bovine
    * Improved URL escapement issues with unsafe characters stapi/display

03/08/2011 bovine
    * Add unified autoconf (TEA) system for all of speedtables (issue 15)

    * Release as version 1.8.2

03/07/2011 bovine
    * Release as version 1.8

3/12/2010 peter
    Default ::stapi::debugging to 0 (change to 1 to enable debug messages)

2/22/2010 karl
    In open_cached, store the time column properly in the time_column array
    so that refresh_ctable will only pull updated rows.

7/1/2009 peter
    Make the read_tabsep and write_tabsep in stapi/server use escape
    quoting.

6/18/2009 karl
    Make the "refresh_ctable" proc's "time_col" argument optional, bringing
    the behavior of refresh_ctable in line with the documentation.

3/24/2009 karl
    Add support for the PostgreSQL "int8" data type by mapping it to
    ctable's "wide".

    Add support for the PostgreSQL "numeric" data type by mapping it to
    ctable's "double".  This probably needs improvement.

2/28/2009 karl
    Add new proc to st_postgres, better_get_columns, which returns triples
    of all the columns of a table... their name, real SQL type (not
    postgresql internal type as with get_columns), and whether the column
    is defined "not null" or not.

    Switch to parsing native SQL data type definitions rather than
    internal PostgreSQL ones when extracting ctable definition
    info by querying metadata about a SQL table definition.  We can
    now handle pretty much all native PostgreSQL data types in ctables.

    Add comment headers to procs in many places.

    Deconstipate the code by adding blank lines around "if" and "foreach"
    bodies, a blank line between variable definitions and the code, etc.

2/2/2009 karl
    Add support for the PostgreSQL "name" and "text" data types by mapping
    them to ctable's "varstring".

    Add support for the PostgreSQL "oid" data type by mapping it to ctable's
    "int".

    Change the mapping for the PostgreSQL "int2" data type from the ctable
    "int" to the ctable "short" type.

    Change the mapping for the PostgreSQL "bool" data type from the ctable
    "varstring" to the ctable "boolean", a huge win for booleans, dropping
    their per-row overhead from a point, a length, and allocated memory
    to a single bit.

9/18/2008 peter
    Split half of "sql_ctable_get" into "sql_create_sql" and use that from
    "sql_ctable_agwn" instead of calling "sql_ctable_get", so that we can
    distinguish "no data" from "empty list".

9/17/2008 peter
    Added "-nocomplain" option to sql_get_one_tuple to allow for ctable
    array_get_with_nulls to return "" for a missing key rather than
    erroring out.

3/25/2008
    Several fixes in key handling in STDisplay

3/04/2008 peter
    Make "List" the default for STDisplay.

12/14/2007 karl
    * Install by default to /usr/local/lib not /usr/fa/lib.

10/4/2007 peter
    Remove optimizer completely, it's been moved to speedtables.

    Extract this ChangeLog from CVS.

8/10/2007 peter
    stapi front end for shared tables

    ::stapi::connect shared://port/table ?-build build_path?

    Can accept "localhost:port", for consistency.

7/18/2007 peter
    Bulk rename "sttp" to "stapi".

7/11/2007 peter
    Don't call remote ctable from inside remote ctable code block. o_O

7/11/2007 peter
    * Made sttp consistent with ctables, if there's no simple key then it
      simulates the ctables "_key" field.

7/10/2007 peter
    Removed "perform" and "fetch" and dependencies on it to simplify the
    API and make it easier to implement in ctables.
    Removed the array versions of "store" and "makekey" for the same reason.

7/9/2007 peter
    Support new ctable "key" command.

6/7/2007 peter
    Document the extensions to search and reference the optimizer.

2/28/2007 peter
    Merging "sttpx" into "sttp" - it's silly having an "extended" version
    of something that's not even released. :)

2/6/2007 peter
    Remove dependance on sc_postgres.

1/24/2007 peter
    Splitting speedcache into sttp[_server|_client|_display]

1/22/2007 peter
    Working STDisplay with "sql:" URLs.

1/19/2007 peter
    Working sql: URLs.

1/18/2007 peter
    Hack reduction: remove CableAware glue from connect_ctable, create
    ::scache::register and move the glue to glue.tcl as connect_cache.
    Get rid of "/var/tmp/speedcache", if you don't specify a cache
    location it'll use the local directory.

1/15/2007 peter
    ctable connection wrapper:
      ::scache::connect URL ?options?

    URL formats:
      ctable://...
        cttp URI
      sql://user:passwd@host:db/table/...
        direct SQL connection Not implemented
      local:///ctable
        reference to already-opened ctable

    more to come.

    Q: should "ctable:" be "cttp:"?


1/5/2007 peter
    Import from CableAware.

    Remove the "helper" routine for generating the ctable from sql because
    it's based on the cable-aware cache.cfg file format.
    Replaced with a "glue" routine in glue.tcl, and a routine for creating
    the column-list format for a ctable from the sql database and
    optional arguments.

